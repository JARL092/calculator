import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class CalculatorTest {

    @Test
    void testAddition() {
        double num1 = 5.0;
        double num2 = 3.0;
        char operator = '+';
        double expected = 8.0;

        double result = calculate(num1, num2, operator);
        assertEquals(expected, result, "Сложение не работает корректно");
    }

    @Test
    void testSubtraction() {
        double num1 = 5.0;
        double num2 = 3.0;
        char operator = '-';
        double expected = 2.0;

        double result = calculate(num1, num2, operator);
        assertEquals(expected, result, "Вычитание не работает корректно");
    }

    @Test
    void testMultiplication() {
        double num1 = 5.0;
        double num2 = 3.0;
        char operator = '*';
        double expected = 15.0;

        double result = calculate(num1, num2, operator);
        assertEquals(expected, result, "Умножение не работает корректно");
    }

    @Test
    void testDivision() {
        double num1 = 6.0;
        double num2 = 3.0;
        char operator = '/';
        double expected = 2.0;

        double result = calculate(num1, num2, operator);
        assertEquals(expected, result, "Деление не работает корректно");
    }

    @Test
    void testDivisionByZero() {
        double num1 = 5.0;
        double num2 = 0.0;
        char operator = '/';

        Exception exception = assertThrows(ArithmeticException.class, () -> {
            calculate(num1, num2, operator);
        });
        assertEquals("Деление на ноль!", exception.getMessage());
    }

    @Test
    void testInvalidOperator() {
        double num1 = 5.0;
        double num2 = 3.0;
        char operator = '^';

        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            calculate(num1, num2, operator);
        });
        assertEquals("Недопустимая операция", exception.getMessage());
    }

    // Метод для выполнения расчета
    private double calculate(double num1, double num2, char operator) {
        switch (operator) {
            case '+':
                return num1 + num2;
            case '-':
                return num1 - num2;
            case '*':
                return num1 * num2;
            case '/':
                if (num2 == 0) {
                    throw new ArithmeticException("Деление на ноль!");
                }
                return num1 / num2;
            default:
                throw new IllegalArgumentException("Недопустимая операция");
        }
    }
}
